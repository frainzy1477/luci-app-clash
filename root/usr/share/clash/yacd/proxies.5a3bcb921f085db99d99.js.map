{"version":3,"sources":["webpack://yacd/./src/components/shared/Styled.module.css?846f","webpack://yacd/./src/components/shared/Styled.tsx","webpack://yacd/./src/components/proxies/ClosePrevConns.tsx","webpack://yacd/./src/components/CollapsibleSectionHeader.module.css?ac3e","webpack://yacd/./src/components/CollapsibleSectionHeader.tsx","webpack://yacd/./src/components/proxies/hooks.tsx","webpack://yacd/./src/components/proxies/ProxyGroup.module.css?781b","webpack://yacd/./src/misc/keycode.ts","webpack://yacd/./src/components/proxies/Proxy.module.css?30a5","webpack://yacd/./src/components/proxies/ProxyLatency.module.css?eebf","webpack://yacd/./src/components/proxies/ProxyLatency.tsx","webpack://yacd/./src/components/proxies/Proxy.tsx","webpack://yacd/./src/components/proxies/ProxyList.module.css?d73c","webpack://yacd/./src/components/proxies/ProxyList.tsx","webpack://yacd/./src/components/proxies/ProxyGroup.tsx","webpack://yacd/./src/components/proxies/proxies.hooks.tsx","webpack://yacd/./src/components/proxies/ProxyPageFab.tsx","webpack://yacd/./src/components/Collapsible.tsx","webpack://yacd/./src/components/proxies/ProxyProvider.module.css?f3f2","webpack://yacd/./src/components/proxies/ProxyProvider.tsx","webpack://yacd/./src/components/proxies/ProxyProviderList.tsx","webpack://yacd/./src/components/proxies/Settings.module.css?7147","webpack://yacd/./src/components/proxies/Settings.tsx","webpack://yacd/./src/components/proxies/TextFilter.tsx","webpack://yacd/./src/components/shared/BaseModal.module.css?fa09","webpack://yacd/./src/components/shared/BaseModal.tsx","webpack://yacd/./src/components/svg/Equalizer.tsx","webpack://yacd/./src/components/proxies/Proxies.module.css?289b","webpack://yacd/./src/components/proxies/Proxies.tsx","webpack://yacd/./src/components/shared/Fab.module.css?1ffc","webpack://yacd/./src/components/shared/Fab.tsx","webpack://yacd/./src/components/shared/RotateIcon.module.css?428b","webpack://yacd/./src/components/shared/RotateIcon.tsx","webpack://yacd/./src/components/shared/Select.module.css?4711","webpack://yacd/./src/components/shared/Select.tsx","webpack://yacd/./src/hooks/useTextInput.ts","webpack://yacd/./src/components/shared.module.css?fc9f"],"names":["FlexCenter","children","className","s","useRef","React","useEffect","ClosePrevConns","onClickPrimaryButton","onClickSecondaryButton","primaryButtonRef","secondaryButtonRef","current","focus","onKeyDown","e","keyCode","style","height","Button","onClick","ref","width","Header","name","type","toggle","isOpen","qty","handleKeyDown","preventDefault","key","cursor","tabIndex","role","kind","title","cx","size","useMemo","getSortDelay","d","proxyInfo","number","NonProxyTypes","ProxySortingFns","Natural","proxies","LatencyAsc","delay","proxyMapping","sort","a","b","LatencyDesc","d1","NameAsc","NameDesc","useFilteredAndSorted","all","hideUnavailableProxies","proxySortBy","useRecoilState","proxyFilterText","filterText","filtered","list","filter","undefined","filterAvailableProxies","searchText","segments","toLowerCase","split","map","x","trim","length","i","seg","indexOf","filterStrArr","filterAvailableProxiesAndSort","keyCodes","ProxyLatency","color","s0","colorMap","getLabelColor","mapState","getProxies","getDelay","proxy","latency","Proxy","connect","t","now","isSelectable","doSelect","error","opacity","ProxySmall","proxyType","getProxyDotBackgroundColor","ret","background","ProxyList","itemOnTapCallback","proxyName","ProxyListSummaryView","createElement","useCallback","useState","ZapWrapper","Z","ProxyGroup","collapsibleIsOpen","getCollapsibleIsOpen","getProxySortBy","getHideUnavailableProxies","group","allItems","apiConfig","dispatch","useStoreActions","updateCollapsibleIsOpen","app","requestDelayForProxies","switchProxy","isTestingLatency","setIsTestingLatency","testLatency","display","alignItems","isLoading","StatefulZap","ProxyPageFab","proxyProviders","useTranslation","requestDelayAll","then","useTestLatencyAction","requestDelayAllFn","names","setIsLoading","updateProviders","useUpdateProviderItems","item","isUpdating","Fab","icon","text","fabPosition","RotateIcon","isRotating","memo","variantsCollpapsibleWrap","initialOpen","transition","duration","open","visibility","closed","variantsCollpapsibleChildContainer","value","motion","framerMotionResouce","previous","bounds","set","ro","ResizeObserver","entry","contentRect","observe","disconnect","useMeasure","refToMeature","div","animate","custom","variants","button","rest","scale","pressed","arrow","rotate","hover","Refresh","initial","whileHover","whileTap","ProxyProvider","getClashAPIConfig","vehicleType","updatedAt","isHealthcheckLoading","setIsHealthcheckLoading","updateProvider","updateProviderByName","useUpdateProviderItem","healthcheckProvider","healthcheckProviderByName","timeAgo","formatDistance","Date","start","ProxyProviderList","items","ContentHeader","options","appConfig","autoCloseOldConns","getAutoCloseOldConns","updateAppConfig","handleProxySortByOnChange","target","handleHideUnavailablesSwitchOnChange","v","Select","o","selected","onChange","checked","TextFilter","useTextInut","shared","BaseModal","onRequestClose","base","modalStyle","afterOpen","beforeClose","overlayClassName","Equalizer","fill","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cy","r","transform","groupNames","getProxyGroupNames","getProxyProviders","showModalClosePrevConns","getShowModalClosePrevConns","refFetchedTimestamp","fetchProxiesHooked","startAt","fetchProxies","completeAt","fn","window","addEventListener","removeEventListener","isSettingsModalOpen","setIsSettingsModalOpen","closeSettingsModal","closeModalClosePrevConns","closePrevConnsAndTheModal","label","groupName","IsFetching","position","right","bottom","cls","setTextGlobal","setText","setTextDebounced","debounce"],"mappings":"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","file":"proxies.5a3bcb921f085db99d99.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FlexCenter\":\"_1NNIVhRL-n\"};","import * as React from 'react';\n\nimport s from './Styled.module.css';\n\nexport function FlexCenter({ children }: { children: React.ReactNode }) {\n  return <div className={s.FlexCenter}>{children}</div>;\n}\n","import * as React from 'react';\n\nimport Button from '../Button';\nimport { FlexCenter } from '../shared/Styled';\n\nconst { useRef, useEffect } = React;\n\ntype Props = {\n  onClickPrimaryButton?: () => void;\n  onClickSecondaryButton?: () => void;\n};\n\nexport function ClosePrevConns({\n  onClickPrimaryButton,\n  onClickSecondaryButton,\n}: Props) {\n  const primaryButtonRef = useRef<HTMLButtonElement>(null);\n  const secondaryButtonRef = useRef<HTMLButtonElement>(null);\n  useEffect(() => {\n    primaryButtonRef.current.focus();\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 39) {\n      secondaryButtonRef.current.focus();\n    } else if (e.keyCode === 37) {\n      primaryButtonRef.current.focus();\n    }\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div onKeyDown={handleKeyDown}>\n      <h2>Close Connections?</h2>\n      <p>\n        Click \"Yes\" to close those connections that are still using the old\n        selected proxy in this group\n      </p>\n      <div style={{ height: 30 }} />\n      <FlexCenter>\n        <Button onClick={onClickPrimaryButton} ref={primaryButtonRef}>\n          Yes\n        </Button>\n        <div style={{ width: 20 }} />\n        <Button onClick={onClickSecondaryButton} ref={secondaryButtonRef}>\n          No\n        </Button>\n      </FlexCenter>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_2qbBB1Sojw\",\"arrow\":\"_1iuVspxe4f\",\"isOpen\":\"_2CN_S7POBQ\",\"btn\":\"_3504uhlYv5\",\"qty\":\"_3Vynmp3NK4\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport { ChevronDown } from 'react-feather';\n\nimport Button from './Button';\nimport s from './CollapsibleSectionHeader.module.css';\nimport { SectionNameType } from './shared/Basic';\n\ntype Props = {\n  name: string;\n  type: string;\n  qty?: number;\n  toggle?: () => void;\n  isOpen?: boolean;\n};\n\nexport default function Header({ name, type, toggle, isOpen, qty }: Props) {\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Enter' || e.key === ' ') {\n        toggle();\n      }\n    },\n    [toggle]\n  );\n  return (\n    <div\n      className={s.header}\n      onClick={toggle}\n      style={{ cursor: 'pointer' }}\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      role=\"button\"\n    >\n      <div>\n        <SectionNameType name={name} type={type} />\n      </div>\n\n      {typeof qty === 'number' ? <span className={s.qty}>{qty}</span> : null}\n\n      <Button\n        kind=\"minimal\"\n        onClick={toggle}\n        className={s.btn}\n        title=\"Toggle collapsible section\"\n      >\n        <span className={cx(s.arrow, { [s.isOpen]: isOpen })}>\n          <ChevronDown size={20} />\n        </span>\n      </Button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { DelayMapping, ProxiesMapping, ProxyItem } from 'src/store/types';\n\nimport {\n  // types\n  NonProxyTypes,\n  // atom\n  proxyFilterText,\n} from '../../store/proxies';\n\nconst { useMemo } = React;\n\nfunction filterAvailableProxies(list: string[], delay: DelayMapping) {\n  return list.filter((name) => {\n    const d = delay[name];\n    if (d === undefined) {\n      return true;\n    }\n    if (d.number === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n}\n\nconst getSortDelay = (\n  d:\n    | undefined\n    | {\n        number?: number;\n      },\n  proxyInfo: ProxyItem\n) => {\n  if (d && typeof d.number === 'number' && d.number > 0) {\n    return d.number;\n  }\n\n  const type = proxyInfo && proxyInfo.type;\n  if (type && NonProxyTypes.indexOf(type) > -1) return -1;\n\n  return 999999;\n};\n\nconst ProxySortingFns = {\n  Natural: (proxies: string[]) => proxies,\n  LatencyAsc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d1 - d2;\n    });\n  },\n  LatencyDesc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d2 - d1;\n    });\n  },\n  NameAsc: (proxies: string[]) => {\n    return proxies.sort();\n  },\n  NameDesc: (proxies: string[]) => {\n    return proxies.sort((a, b) => {\n      if (a > b) return -1;\n      if (a < b) return 1;\n      return 0;\n    });\n  },\n};\n\nfunction filterStrArr(all: string[], searchText: string) {\n  const segments = searchText\n    .toLowerCase()\n    .split(' ')\n    .map((x) => x.trim())\n    .filter((x) => !!x);\n\n  if (segments.length === 0) return all;\n\n  return all.filter((name) => {\n    let i = 0;\n    for (; i < segments.length; i++) {\n      const seg = segments[i];\n      if (name.toLowerCase().indexOf(seg) > -1) return true;\n    }\n    return false;\n  });\n}\n\nfunction filterAvailableProxiesAndSort(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  filterText: string,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  // all is freezed\n  let filtered = [...all];\n  if (hideUnavailableProxies) {\n    filtered = filterAvailableProxies(all, delay);\n  }\n\n  if (typeof filterText === 'string' && filterText !== '') {\n    filtered = filterStrArr(filtered, filterText);\n  }\n  return ProxySortingFns[proxySortBy](filtered, delay, proxies);\n}\n\nexport function useFilteredAndSorted(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  const [filterText] = useRecoilState(proxyFilterText);\n  return useMemo(\n    () =>\n      filterAvailableProxiesAndSort(\n        all,\n        delay,\n        hideUnavailableProxies,\n        filterText,\n        proxySortBy,\n        proxies\n      ),\n    [all, delay, hideUnavailableProxies, filterText, proxySortBy, proxies]\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"v5oNKUwcTc\",\"zapWrapper\":\"_2fR1H0ysyY\"};","export const keyCodes = {\n  Right: 39,\n  Left: 37,\n  Enter: 13,\n  Space: 32,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"proxy\":\"_5-kOJyYfSn\",\"now\":\"MbWebw2VH4\",\"error\":\"_2dlAYgAIKi\",\"selectable\":\"_3rB1UgDAL6\",\"proxyType\":\"nnjdzHZySt\",\"row\":\"_2E11-huRp7\",\"proxyName\":\"_2Eys6UMXCm\",\"proxySmall\":\"_2rRGWVNOYC\"};","// extracted by mini-css-extract-plugin\nexport default {\"proxyLatency\":\"_1GlyjMFCSf\"};","import * as React from 'react';\n\nimport s0 from './ProxyLatency.module.css';\n\ntype ProxyLatencyProps = {\n  number: number;\n  color: string;\n};\n\nexport function ProxyLatency({ number, color }: ProxyLatencyProps) {\n  return (\n    <span className={s0.proxyLatency} style={{ color }}>\n      <span>{number} ms</span>\n    </span>\n  );\n}\n","import cx from 'clsx';\nimport * as React from 'react';\nimport { keyCodes } from 'src/misc/keycode';\n\nimport { getDelay, getProxies, NonProxyTypes } from '../../store/proxies';\nimport { connect } from '../StateProvider';\nimport s0 from './Proxy.module.css';\nimport { ProxyLatency } from './ProxyLatency';\n\nconst { useMemo } = React;\n\nconst colorMap = {\n  // green\n  good: '#67c23a',\n  // yellow\n  normal: '#d4b75c',\n  // orange\n  bad: '#e67f3c',\n  // bad: '#F56C6C',\n  na: '#909399',\n};\n\nfunction getLabelColor({\n  number,\n}: {\n  number?: number;\n} = {}) {\n  if (number === 0) {\n    return colorMap.na;\n  } else if (number < 200) {\n    return colorMap.good;\n  } else if (number < 400) {\n    return colorMap.normal;\n  } else if (typeof number === 'number') {\n    return colorMap.bad;\n  }\n  return colorMap.na;\n}\n\nfunction getProxyDotBackgroundColor(\n  latency: {\n    number?: number;\n  },\n  proxyType: string\n) {\n  if (NonProxyTypes.indexOf(proxyType) > -1) {\n    return 'linear-gradient(135deg, white 15%, #999 15% 30%, white 30% 45%, #999 45% 60%, white 60% 75%, #999 75% 90%, white 90% 100%)';\n  }\n  return getLabelColor(latency);\n}\n\ntype ProxyProps = {\n  name: string;\n  now?: boolean;\n  proxy: any;\n  latency: any;\n  isSelectable?: boolean;\n  onClick?: (proxyName: string) => unknown;\n};\n\nfunction ProxySmallImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getProxyDotBackgroundColor(latency, proxy.type), [\n    latency,\n    proxy,\n  ]);\n  const title = useMemo(() => {\n    let ret = name;\n    if (latency && typeof latency.number === 'number') {\n      ret += ' ' + latency.number + ' ms';\n    }\n    return ret;\n  }, [name, latency]);\n\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n\n  const className = useMemo(() => {\n    return cx(s0.proxySmall, {\n      [s0.now]: now,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now]);\n\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n\n  return (\n    <div\n      title={title}\n      className={className}\n      style={{ background: color }}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    />\n  );\n}\n\nfunction formatProxyType(t: string) {\n  if (t === 'Shadowsocks') return 'SS';\n  return t;\n}\n\nfunction ProxyImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getLabelColor(latency), [latency]);\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n  const className = useMemo(() => {\n    return cx(s0.proxy, {\n      [s0.now]: now,\n      [s0.error]: latency && latency.error,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now, latency]);\n\n  return (\n    <div\n      tabIndex={0}\n      className={className}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    >\n      <div className={s0.proxyName}>{name}</div>\n      <div className={s0.row}>\n        <span className={s0.proxyType} style={{ opacity: now ? 0.6 : 0.2 }}>\n          {formatProxyType(proxy.type)}\n        </span>\n        {latency && latency.number ? (\n          <ProxyLatency number={latency.number} color={color} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapState = (s: any, { name }) => {\n  const proxies = getProxies(s);\n  const delay = getDelay(s);\n  return {\n    proxy: proxies[name],\n    latency: delay[name],\n  };\n};\n\nexport const Proxy = connect(mapState)(ProxyImpl);\nexport const ProxySmall = connect(mapState)(ProxySmallImpl);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"_1pPZyUDtdp\",\"listSummaryView\":\"_6uXcWV1Myk\"};","import * as React from 'react';\n\nimport { Proxy, ProxySmall } from './Proxy';\nimport s from './ProxyList.module.css';\n\ntype ProxyListProps = {\n  all: string[];\n  now?: string;\n  isSelectable?: boolean;\n  itemOnTapCallback?: (x: string) => void;\n  show?: boolean;\n};\n\nexport function ProxyList({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  const proxies = all;\n\n  return (\n    <div className={s.list}>\n      {proxies.map((proxyName) => {\n        return (\n          <Proxy\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function ProxyListSummaryView({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  return (\n    <div className={s.listSummaryView}>\n      {all.map((proxyName) => {\n        return (\n          <ProxySmall\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Zap } from 'react-feather';\n\nimport {\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport { getProxies, switchProxy } from '../../store/proxies';\nimport Button from '../Button';\nimport CollapsibleSectionHeader from '../CollapsibleSectionHeader';\nimport { connect, useStoreActions } from '../StateProvider';\nimport { useFilteredAndSorted } from './hooks';\nimport s0 from './ProxyGroup.module.css';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\n\nconst { createElement, useCallback, useMemo, useState } = React;\n\nfunction ZapWrapper() {\n  return (\n    <div className={s0.zapWrapper}>\n      <Zap size={16} />\n    </div>\n  );\n}\n\nfunction ProxyGroupImpl({\n  name,\n  all: allItems,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  proxies,\n  type,\n  now,\n  isOpen,\n  apiConfig,\n  dispatch,\n}) {\n  const all = useFilteredAndSorted(\n    allItems,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies\n  );\n\n  const isSelectable = useMemo(() => type === 'Selector', [type]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n    proxies: { requestDelayForProxies },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyGroup', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const itemOnTapCallback = useCallback(\n    (proxyName) => {\n      if (!isSelectable) return;\n      dispatch(switchProxy(apiConfig, name, proxyName));\n    },\n    [apiConfig, dispatch, name, isSelectable]\n  );\n\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const testLatency = useCallback(async () => {\n    setIsTestingLatency(true);\n    try {\n      await requestDelayForProxies(apiConfig, all);\n    } catch (err) {}\n    setIsTestingLatency(false);\n  }, [all, apiConfig, requestDelayForProxies]);\n\n  return (\n    <div className={s0.group}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <CollapsibleSectionHeader\n          name={name}\n          type={type}\n          toggle={toggle}\n          qty={all.length}\n          isOpen={isOpen}\n        />\n        <Button\n          title=\"Test latency\"\n          kind=\"minimal\"\n          onClick={testLatency}\n          isLoading={isTestingLatency}\n        >\n          <ZapWrapper />\n        </Button>\n      </div>\n      {createElement(isOpen ? ProxyList : ProxyListSummaryView, {\n        all,\n        now,\n        isSelectable,\n        itemOnTapCallback,\n      })}\n    </div>\n  );\n}\n\nexport const ProxyGroup = connect((s, { name, delay }) => {\n  const proxies = getProxies(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n\n  const group = proxies[name];\n  const { all, type, now } = group;\n  return {\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies,\n    type,\n    now,\n    isOpen: collapsibleIsOpen[`proxyGroup:${name}`],\n  };\n})(ProxyGroupImpl);\n","import * as React from 'react';\nimport { updateProviderByName, updateProviders } from 'src/store/proxies';\nimport { DispatchFn } from 'src/store/types';\nimport { ClashAPIConfig } from 'src/types';\n\nconst { useCallback, useState } = React;\n\nexport function useUpdateProviderItem({\n  dispatch,\n  apiConfig,\n  name,\n}: {\n  dispatch: DispatchFn;\n  apiConfig: ClashAPIConfig;\n  name: string;\n}) {\n  return useCallback(() => dispatch(updateProviderByName(apiConfig, name)), [\n    apiConfig,\n    dispatch,\n    name,\n  ]);\n}\n\nexport function useUpdateProviderItems({\n  dispatch,\n  apiConfig,\n  names,\n}: {\n  dispatch: DispatchFn;\n  apiConfig: ClashAPIConfig;\n  names: string[];\n}): [() => unknown, boolean] {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const action = useCallback(async () => {\n    if (isLoading) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await dispatch(updateProviders(apiConfig, names));\n    } catch (e) {\n      // ignore\n    }\n    setIsLoading(false);\n  }, [apiConfig, dispatch, names, isLoading]);\n\n  return [action, isLoading];\n}\n","import * as React from 'react';\nimport { Zap } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport { useUpdateProviderItems } from 'src/components/proxies/proxies.hooks';\nimport {\n  Action,\n  Fab,\n  IsFetching,\n  position as fabPosition,\n} from 'src/components/shared/Fab';\nimport { RotateIcon } from 'src/components/shared/RotateIcon';\nimport { requestDelayAll } from 'src/store/proxies';\nimport { DispatchFn, FormattedProxyProvider } from 'src/store/types';\nimport { ClashAPIConfig } from 'src/types';\n\nconst { useState, useCallback } = React;\n\nfunction StatefulZap({ isLoading }: { isLoading: boolean }) {\n  return isLoading ? (\n    <IsFetching>\n      <Zap width={16} height={16} />\n    </IsFetching>\n  ) : (\n    <Zap width={16} height={16} />\n  );\n}\n\nfunction useTestLatencyAction({\n  dispatch,\n  apiConfig,\n}: {\n  dispatch: DispatchFn;\n  apiConfig: ClashAPIConfig;\n}): [() => unknown, boolean] {\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const requestDelayAllFn = useCallback(() => {\n    if (isTestingLatency) return;\n\n    setIsTestingLatency(true);\n    dispatch(requestDelayAll(apiConfig)).then(\n      () => setIsTestingLatency(false),\n      () => setIsTestingLatency(false)\n    );\n  }, [apiConfig, dispatch, isTestingLatency]);\n  return [requestDelayAllFn, isTestingLatency];\n}\n\nexport function ProxyPageFab({\n  dispatch,\n  apiConfig,\n  proxyProviders,\n}: {\n  dispatch: DispatchFn;\n  apiConfig: ClashAPIConfig;\n  proxyProviders: FormattedProxyProvider[];\n}) {\n  const { t } = useTranslation();\n  const [requestDelayAllFn, isTestingLatency] = useTestLatencyAction({\n    dispatch,\n    apiConfig,\n  });\n\n  const [updateProviders, isUpdating] = useUpdateProviderItems({\n    apiConfig,\n    dispatch,\n    names: proxyProviders.map((item) => item.name),\n  });\n\n  return (\n    <Fab\n      icon={<StatefulZap isLoading={isTestingLatency} />}\n      onClick={requestDelayAllFn}\n      text={t('Test Latency')}\n      style={fabPosition}\n    >\n      {proxyProviders.length > 0 ? (\n        <Action text={t('update_all_proxy_provider')} onClick={updateProviders}>\n          <RotateIcon isRotating={isUpdating} />\n        </Action>\n      ) : null}\n    </Fab>\n  );\n}\n","import React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport { framerMotionResouce } from '../misc/motion';\n\nconst { memo, useState, useRef, useEffect } = React;\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => void (ref.current = value), [value]);\n  return ref.current;\n}\n\nfunction useMeasure() {\n  const ref = useRef();\n  const [bounds, set] = useState({ height: 0 });\n  useEffect(() => {\n    const ro = new ResizeObserver(([entry]) => set(entry.contentRect));\n    if (ref.current) ro.observe(ref.current);\n    return () => ro.disconnect();\n  }, []);\n  return [ref, bounds];\n}\n\nconst variantsCollpapsibleWrap = {\n  initialOpen: {\n    height: 'auto',\n    transition: { duration: 0 },\n  },\n  open: (height) => ({\n    height,\n    opacity: 1,\n    visibility: 'visible',\n    transition: { duration: 0.3 },\n  }),\n  closed: {\n    height: 0,\n    opacity: 0,\n    visibility: 'hidden',\n    transition: { duration: 0.3 },\n  },\n};\n\nconst variantsCollpapsibleChildContainer = {\n  open: {\n    x: 0,\n  },\n  closed: {\n    x: 20,\n  },\n};\n\n// @ts-expect-error ts-migrate(2339) FIXME: Property 'isOpen' does not exist on type '{ childr... Remove this comment to see the full error message\nconst Collapsible = memo(({ children, isOpen }) => {\n  const module = framerMotionResouce.read();\n  const motion = module.motion;\n  const previous = usePrevious(isOpen);\n  // @ts-expect-error ts-migrate(2339) FIXME: Property 'height' does not exist on type 'MutableR... Remove this comment to see the full error message\n  const [refToMeature, { height }] = useMeasure();\n  return (\n    <div>\n      <motion.div\n        animate={\n          isOpen && previous === isOpen\n            ? 'initialOpen'\n            : isOpen\n            ? 'open'\n            : 'closed'\n        }\n        custom={height}\n        variants={variantsCollpapsibleWrap}\n      >\n        <motion.div\n          variants={variantsCollpapsibleChildContainer}\n          ref={refToMeature}\n        >\n          {children}\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n});\n\nexport default Collapsible;\n","// extracted by mini-css-extract-plugin\nexport default {\"updatedAt\":\"_113att7Ifr\",\"body\":\"_26mH_RmGnl\",\"actionFooter\":\"_2cXcxGEUNI\",\"refresh\":\"_2NjdAt9CvG\"};","import { formatDistance } from 'date-fns';\nimport * as React from 'react';\nimport { RotateCw, Zap } from 'react-feather';\nimport Button from 'src/components/Button';\nimport Collapsible from 'src/components/Collapsible';\nimport CollapsibleSectionHeader from 'src/components/CollapsibleSectionHeader';\nimport { useUpdateProviderItem } from 'src/components/proxies/proxies.hooks';\nimport { connect, useStoreActions } from 'src/components/StateProvider';\nimport { framerMotionResouce } from 'src/misc/motion';\nimport {\n  getClashAPIConfig,\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from 'src/store/app';\nimport { getDelay, healthcheckProviderByName } from 'src/store/proxies';\nimport { DelayMapping } from 'src/store/types';\n\nimport { useFilteredAndSorted } from './hooks';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\nimport s from './ProxyProvider.module.css';\n\nconst { useState, useCallback } = React;\n\ntype Props = {\n  name: string;\n  proxies: Array<string>;\n  delay: DelayMapping;\n  hideUnavailableProxies: boolean;\n  proxySortBy: string;\n  type: 'Proxy' | 'Rule';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n  dispatch: (x: any) => Promise<any>;\n  isOpen: boolean;\n  apiConfig: any;\n};\n\nfunction ProxyProviderImpl({\n  name,\n  proxies: all,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  vehicleType,\n  updatedAt,\n  isOpen,\n  dispatch,\n  apiConfig,\n}: Props) {\n  const proxies = useFilteredAndSorted(\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy\n  );\n  const [isHealthcheckLoading, setIsHealthcheckLoading] = useState(false);\n\n  const updateProvider = useUpdateProviderItem({ dispatch, apiConfig, name });\n\n  const healthcheckProvider = useCallback(async () => {\n    setIsHealthcheckLoading(true);\n    await dispatch(healthcheckProviderByName(apiConfig, name));\n    setIsHealthcheckLoading(false);\n  }, [apiConfig, dispatch, name, setIsHealthcheckLoading]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyProvider', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const timeAgo = formatDistance(new Date(updatedAt), new Date());\n  return (\n    <div className={s.body}>\n      <CollapsibleSectionHeader\n        name={name}\n        toggle={toggle}\n        type={vehicleType}\n        isOpen={isOpen}\n        qty={proxies.length}\n      />\n      <div className={s.updatedAt}>\n        <small>Updated {timeAgo} ago</small>\n      </div>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element[]; isOpen: boolean; }' i... Remove this comment to see the full error message */}\n      <Collapsible isOpen={isOpen}>\n        <ProxyList all={proxies} />\n        <div className={s.actionFooter}>\n          <Button text=\"Update\" start={<Refresh />} onClick={updateProvider} />\n          <Button\n            text=\"Health Check\"\n            start={<Zap size={16} />}\n            onClick={healthcheckProvider}\n            isLoading={isHealthcheckLoading}\n          />\n        </div>\n      </Collapsible>\n      {/* @ts-expect-error ts-migrate(2322) FIXME: Type '{ children: Element; isOpen: boolean; }' is ... Remove this comment to see the full error message */}\n      <Collapsible isOpen={!isOpen}>\n        <ProxyListSummaryView all={proxies} />\n      </Collapsible>\n    </div>\n  );\n}\n\nconst button = {\n  rest: { scale: 1 },\n  pressed: { scale: 0.95 },\n};\nconst arrow = {\n  rest: { rotate: 0 },\n  hover: { rotate: 360, transition: { duration: 0.3 } },\n};\nfunction Refresh() {\n  const module = framerMotionResouce.read();\n  const motion = module.motion;\n  return (\n    <motion.div\n      className={s.refresh}\n      variants={button}\n      initial=\"rest\"\n      whileHover=\"hover\"\n      whileTap=\"pressed\"\n    >\n      <motion.div className=\"flexCenter\" variants={arrow}>\n        <RotateCw size={16} />\n      </motion.div>\n    </motion.div>\n  );\n}\n\nconst mapState = (s, { proxies, name }) => {\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const delay = getDelay(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const apiConfig = getClashAPIConfig(s);\n\n  const proxySortBy = getProxySortBy(s);\n\n  return {\n    apiConfig,\n    proxies,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    isOpen: collapsibleIsOpen[`proxyProvider:${name}`],\n  };\n};\n\nexport const ProxyProvider = connect(mapState)(ProxyProviderImpl);\n","import * as React from 'react';\nimport ContentHeader from 'src/components/ContentHeader';\nimport { ProxyProvider } from 'src/components/proxies/ProxyProvider';\nimport { FormattedProxyProvider } from 'src/store/types';\n\nexport function ProxyProviderList({\n  items,\n}: {\n  items: FormattedProxyProvider[];\n}) {\n  if (items.length === 0) return null;\n\n  return (\n    <>\n      <ContentHeader title=\"Proxy Provider\" />\n      <div>\n        {items.map((item) => (\n          <ProxyProvider\n            key={item.name}\n            name={item.name}\n            proxies={item.proxies}\n            type={item.type}\n            vehicleType={item.vehicleType}\n            updatedAt={item.updatedAt}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"labeledInput\":\"_1tkxMBL44k\"};","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Select from 'src/components/shared/Select';\n\nimport {\n  getAutoCloseOldConns,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport { connect, useStoreActions } from '../StateProvider';\nimport Switch from '../SwitchThemed';\nimport s from './Settings.module.css';\n\nconst options = [\n  ['Natural', 'order_natural'],\n  ['LatencyAsc', 'order_latency_asc'],\n  ['LatencyDesc', 'order_latency_desc'],\n  ['NameAsc', 'order_name_asc'],\n  ['NameDesc', 'order_name_desc'],\n];\n\nconst { useCallback } = React;\n\nfunction Settings({ appConfig }) {\n  const {\n    app: { updateAppConfig },\n  } = useStoreActions();\n\n  const handleProxySortByOnChange = useCallback(\n    (e) => {\n      updateAppConfig('proxySortBy', e.target.value);\n    },\n    [updateAppConfig]\n  );\n\n  const handleHideUnavailablesSwitchOnChange = useCallback(\n    (v) => {\n      updateAppConfig('hideUnavailableProxies', v);\n    },\n    [updateAppConfig]\n  );\n  const { t } = useTranslation();\n  return (\n    <>\n      <div className={s.labeledInput}>\n        <span>{t('sort_in_grp')}</span>\n        <div>\n          <Select\n            options={options.map((o) => {\n              return [o[0], t(o[1])];\n            })}\n            selected={appConfig.proxySortBy}\n            onChange={handleProxySortByOnChange}\n          />\n        </div>\n      </div>\n      <hr />\n      <div className={s.labeledInput}>\n        <span>{t('hide_unavail_proxies')}</span>\n        <div>\n          <Switch\n            name=\"hideUnavailableProxies\"\n            checked={appConfig.hideUnavailableProxies}\n            onChange={handleHideUnavailablesSwitchOnChange}\n          />\n        </div>\n      </div>\n      <div className={s.labeledInput}>\n        <span>{t('auto_close_conns')}</span>\n        <div>\n          <Switch\n            name=\"autoCloseOldConns\"\n            checked={appConfig.autoCloseOldConns}\n            onChange={(v) => updateAppConfig('autoCloseOldConns', v)}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapState = (s) => {\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const autoCloseOldConns = getAutoCloseOldConns(s);\n\n  return {\n    appConfig: {\n      proxySortBy,\n      hideUnavailableProxies,\n      autoCloseOldConns,\n    },\n  };\n};\nexport default connect(mapState)(Settings);\n","import * as React from 'react';\nimport { useTextInut } from 'src/hooks/useTextInput';\n\nimport { proxyFilterText } from '../../store/proxies';\nimport shared from '../shared.module.css';\n\nexport function TextFilter() {\n  const [onChange, text] = useTextInut(proxyFilterText);\n  return (\n    <input\n      className={shared.input}\n      type=\"text\"\n      value={text}\n      onChange={onChange}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"_25Hedjekvk\",\"cnt\":\"_1tfU5GSa-_\",\"afterOpen\":\"_2VMuy-HWwC\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport Modal from 'react-modal';\n\nimport modalStyle from '../Modal.module.css';\nimport s from './BaseModal.module.css';\n\nconst { useMemo } = React;\n\nexport default function BaseModal({ isOpen, onRequestClose, children }) {\n  const className = useMemo(\n    () => ({\n      base: cx(modalStyle.content, s.cnt),\n      afterOpen: s.afterOpen,\n      beforeClose: '',\n    }),\n    []\n  );\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      className={className}\n      overlayClassName={cx(modalStyle.overlay, s.overlay)}\n    >\n      {children}\n    </Modal>\n  );\n}\n","import * as React from 'react';\n\ntype Props = {\n  size?: number;\n  color?: string;\n};\n\nexport default function Equalizer({\n  color = 'currentColor',\n  size = 24,\n}: Props) {\n  return (\n    <svg\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={size}\n      height={size}\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M2 6h9M18.5 6H22\" />\n      <circle cx=\"16\" cy=\"6\" r=\"2\" />\n      <path d=\"M22 18h-9M6 18H2\" />\n      <circle r=\"2\" transform=\"matrix(-1 0 0 1 8 18)\" />\n    </svg>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"topBar\":\"_2adLhYLrrV\",\"topBarRight\":\"_1gc_yljm7w\",\"textFilterContainer\":\"_1N0wXB7TV7\",\"group\":\"_35E6rdJlPT\"};","import Tooltip from '@reach/tooltip';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'src/components/Button';\nimport ContentHeader from 'src/components/ContentHeader';\nimport { ClosePrevConns } from 'src/components/proxies/ClosePrevConns';\nimport { ProxyGroup } from 'src/components/proxies/ProxyGroup';\nimport { ProxyPageFab } from 'src/components/proxies/ProxyPageFab';\nimport { ProxyProviderList } from 'src/components/proxies/ProxyProviderList';\nimport Settings from 'src/components/proxies/Settings';\nimport { TextFilter } from 'src/components/proxies/TextFilter';\nimport BaseModal from 'src/components/shared/BaseModal';\nimport { connect, useStoreActions } from 'src/components/StateProvider';\nimport Equalizer from 'src/components/svg/Equalizer';\nimport { getClashAPIConfig } from 'src/store/app';\nimport {\n  fetchProxies,\n  getDelay,\n  getProxyGroupNames,\n  getProxyProviders,\n  getShowModalClosePrevConns,\n} from 'src/store/proxies';\nimport type { State } from 'src/store/types';\n\nimport s0 from './Proxies.module.css';\n\nconst { useState, useEffect, useCallback, useRef } = React;\n\nfunction Proxies({\n  dispatch,\n  groupNames,\n  delay,\n  proxyProviders,\n  apiConfig,\n  showModalClosePrevConns,\n}) {\n  const refFetchedTimestamp = useRef<{ startAt?: number; completeAt?: number }>(\n    {}\n  );\n\n  const fetchProxiesHooked = useCallback(() => {\n    refFetchedTimestamp.current.startAt = Date.now();\n    dispatch(fetchProxies(apiConfig)).then(() => {\n      refFetchedTimestamp.current.completeAt = Date.now();\n    });\n  }, [apiConfig, dispatch]);\n  useEffect(() => {\n    // fetch it now\n    fetchProxiesHooked();\n\n    // arm a window on focus listener to refresh it\n    const fn = () => {\n      if (\n        refFetchedTimestamp.current.startAt &&\n        Date.now() - refFetchedTimestamp.current.startAt > 3e4 // 30s\n      ) {\n        fetchProxiesHooked();\n      }\n    };\n    window.addEventListener('focus', fn, false);\n    return () => window.removeEventListener('focus', fn, false);\n  }, [fetchProxiesHooked]);\n\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const closeSettingsModal = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n\n  const {\n    proxies: { closeModalClosePrevConns, closePrevConnsAndTheModal },\n  } = useStoreActions();\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <BaseModal\n        isOpen={isSettingsModalOpen}\n        onRequestClose={closeSettingsModal}\n      >\n        <Settings />\n      </BaseModal>\n      <div className={s0.topBar}>\n        <ContentHeader title={t('Proxies')} />\n        <div className={s0.topBarRight}>\n          <div className={s0.textFilterContainer}>\n            <TextFilter />\n          </div>\n          <Tooltip label={t('settings')}>\n            <Button kind=\"minimal\" onClick={() => setIsSettingsModalOpen(true)}>\n              <Equalizer size={16} />\n            </Button>\n          </Tooltip>\n        </div>\n      </div>\n      <div>\n        {groupNames.map((groupName: string) => {\n          return (\n            <div className={s0.group} key={groupName}>\n              <ProxyGroup\n                name={groupName}\n                delay={delay}\n                apiConfig={apiConfig}\n                dispatch={dispatch}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <ProxyProviderList items={proxyProviders} />\n      <div style={{ height: 60 }} />\n      <ProxyPageFab\n        dispatch={dispatch}\n        apiConfig={apiConfig}\n        proxyProviders={proxyProviders}\n      />\n      <BaseModal\n        isOpen={showModalClosePrevConns}\n        onRequestClose={closeModalClosePrevConns}\n      >\n        <ClosePrevConns\n          onClickPrimaryButton={() => closePrevConnsAndTheModal(apiConfig)}\n          onClickSecondaryButton={closeModalClosePrevConns}\n        />\n      </BaseModal>\n    </>\n  );\n}\n\nconst mapState = (s: State) => ({\n  apiConfig: getClashAPIConfig(s),\n  groupNames: getProxyGroupNames(s),\n  proxyProviders: getProxyProviders(s),\n  delay: getDelay(s),\n  showModalClosePrevConns: getShowModalClosePrevConns(s),\n});\n\nexport default connect(mapState)(Proxies);\n","// extracted by mini-css-extract-plugin\nexport default {\"spining\":\"_3nmqcBZJL5\",\"spining_keyframes\":\"RLtvWZ8oZ2\"};","import './rtf.css';\n\nimport * as React from 'react';\nimport { Action, Fab } from 'react-tiny-fab/dist';\n\nimport s from './Fab.module.css';\n\nexport function IsFetching({ children }: { children: React.ReactNode }) {\n  return <span className={s.spining}>{children}</span>;\n}\n\nexport const position = {\n  right: 10,\n  bottom: 10,\n};\n\nexport { Fab, Action };\n","// extracted by mini-css-extract-plugin\nexport default {\"rotate\":\"_3UD6wCqqgE\",\"isRotating\":\"W4xtnaGef4\",\"rotating\":\"_3A1z9z4LFT\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport { RotateCw } from 'react-feather';\n\nimport s from './RotateIcon.module.css';\n\nexport function RotateIcon({ isRotating }: { isRotating: boolean }) {\n  const cls = cx(s.rotate, {\n    [s.isRotating]: isRotating,\n  });\n  return (\n    <span className={cls}>\n      <RotateCw width={16} />\n    </span>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"_2epoA7G8CQ\"};","import * as React from 'react';\n\nimport s from './Select.module.css';\n\ntype Props = {\n  options: Array<string[]>;\n  selected: string;\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => any;\n};\n\nexport default function Select({ options, selected, onChange }: Props) {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-onchange\n    <select className={s.select} value={selected} onChange={onChange}>\n      {options.map(([value, name]) => (\n        <option key={value} value={value}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import debounce from 'lodash-es/debounce';\nimport * as React from 'react';\nimport { RecoilState, useRecoilState } from 'recoil';\n\nconst { useCallback, useState, useMemo } = React;\n\nexport function useTextInut(\n  x: RecoilState<string>\n): [(e: React.ChangeEvent<HTMLInputElement>) => void, string] {\n  const [, setTextGlobal] = useRecoilState(x);\n  const [text, setText] = useState('');\n  const setTextDebounced = useMemo(() => debounce(setTextGlobal, 300), [\n    setTextGlobal,\n  ]);\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value);\n      setTextDebounced(e.target.value);\n    },\n    [setTextDebounced]\n  );\n  return [onChange, text];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_1I0EXOg8Vu\"};"],"sourceRoot":""}